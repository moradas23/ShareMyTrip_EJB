//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// Este código fuente fue generado automáticamente por wsdl, Versión=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="EjbSeatServiceServiceSoapBinding", Namespace="http://seat.impl.business.sdi.com/")]
public partial class EjbSeatServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback insertExcluidoOperationCompleted;
    
    private System.Threading.SendOrPostCallback insertSinPlazasOperationCompleted;
    
    private System.Threading.SendOrPostCallback findPlazasAceptadasOperationCompleted;
    
    private System.Threading.SendOrPostCallback insertSeatOperationCompleted;
    
    private System.Threading.SendOrPostCallback findPlazasAceptadasUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback insertOperationCompleted;
    
    private System.Threading.SendOrPostCallback findByTripOperationCompleted;
    
    private System.Threading.SendOrPostCallback excluirUsuarioOperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteOperationCompleted;
    
    private System.Threading.SendOrPostCallback actualizarExcluidoOperationCompleted;
    
    private System.Threading.SendOrPostCallback findByUserOperationCompleted;
    
    /// <remarks/>
    public EjbSeatServiceService() {
        this.Url = "http://localhost:8280/sdi3-13.EJB/SeatService";
    }
    
    /// <remarks/>
    public event insertExcluidoCompletedEventHandler insertExcluidoCompleted;
    
    /// <remarks/>
    public event insertSinPlazasCompletedEventHandler insertSinPlazasCompleted;
    
    /// <remarks/>
    public event findPlazasAceptadasCompletedEventHandler findPlazasAceptadasCompleted;
    
    /// <remarks/>
    public event insertSeatCompletedEventHandler insertSeatCompleted;
    
    /// <remarks/>
    public event findPlazasAceptadasUserCompletedEventHandler findPlazasAceptadasUserCompleted;
    
    /// <remarks/>
    public event insertCompletedEventHandler insertCompleted;
    
    /// <remarks/>
    public event findByTripCompletedEventHandler findByTripCompleted;
    
    /// <remarks/>
    public event excluirUsuarioCompletedEventHandler excluirUsuarioCompleted;
    
    /// <remarks/>
    public event deleteCompletedEventHandler deleteCompleted;
    
    /// <remarks/>
    public event actualizarExcluidoCompletedEventHandler actualizarExcluidoCompleted;
    
    /// <remarks/>
    public event findByUserCompletedEventHandler findByUserCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void insertExcluido([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified) {
        this.Invoke("insertExcluido", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegininsertExcluido(long arg0, bool arg0Specified, long arg1, bool arg1Specified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("insertExcluido", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndinsertExcluido(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void insertExcluidoAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified) {
        this.insertExcluidoAsync(arg0, arg0Specified, arg1, arg1Specified, null);
    }
    
    /// <remarks/>
    public void insertExcluidoAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified, object userState) {
        if ((this.insertExcluidoOperationCompleted == null)) {
            this.insertExcluidoOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertExcluidoOperationCompleted);
        }
        this.InvokeAsync("insertExcluido", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, this.insertExcluidoOperationCompleted, userState);
    }
    
    private void OninsertExcluidoOperationCompleted(object arg) {
        if ((this.insertExcluidoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.insertExcluidoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void insertSinPlazas([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified) {
        this.Invoke("insertSinPlazas", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegininsertSinPlazas(long arg0, bool arg0Specified, long arg1, bool arg1Specified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("insertSinPlazas", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndinsertSinPlazas(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void insertSinPlazasAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified) {
        this.insertSinPlazasAsync(arg0, arg0Specified, arg1, arg1Specified, null);
    }
    
    /// <remarks/>
    public void insertSinPlazasAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified, object userState) {
        if ((this.insertSinPlazasOperationCompleted == null)) {
            this.insertSinPlazasOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertSinPlazasOperationCompleted);
        }
        this.InvokeAsync("insertSinPlazas", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, this.insertSinPlazasOperationCompleted, userState);
    }
    
    private void OninsertSinPlazasOperationCompleted(object arg) {
        if ((this.insertSinPlazasCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.insertSinPlazasCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public seat[] findPlazasAceptadas([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
        object[] results = this.Invoke("findPlazasAceptadas", new object[] {
                    arg0,
                    arg0Specified});
        return ((seat[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginfindPlazasAceptadas(long arg0, bool arg0Specified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("findPlazasAceptadas", new object[] {
                    arg0,
                    arg0Specified}, callback, asyncState);
    }
    
    /// <remarks/>
    public seat[] EndfindPlazasAceptadas(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((seat[])(results[0]));
    }
    
    /// <remarks/>
    public void findPlazasAceptadasAsync(long arg0, bool arg0Specified) {
        this.findPlazasAceptadasAsync(arg0, arg0Specified, null);
    }
    
    /// <remarks/>
    public void findPlazasAceptadasAsync(long arg0, bool arg0Specified, object userState) {
        if ((this.findPlazasAceptadasOperationCompleted == null)) {
            this.findPlazasAceptadasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPlazasAceptadasOperationCompleted);
        }
        this.InvokeAsync("findPlazasAceptadas", new object[] {
                    arg0,
                    arg0Specified}, this.findPlazasAceptadasOperationCompleted, userState);
    }
    
    private void OnfindPlazasAceptadasOperationCompleted(object arg) {
        if ((this.findPlazasAceptadasCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.findPlazasAceptadasCompleted(this, new findPlazasAceptadasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void insertSeat([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] seat arg0) {
        this.Invoke("insertSeat", new object[] {
                    arg0});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegininsertSeat(seat arg0, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("insertSeat", new object[] {
                    arg0}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndinsertSeat(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void insertSeatAsync(seat arg0) {
        this.insertSeatAsync(arg0, null);
    }
    
    /// <remarks/>
    public void insertSeatAsync(seat arg0, object userState) {
        if ((this.insertSeatOperationCompleted == null)) {
            this.insertSeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertSeatOperationCompleted);
        }
        this.InvokeAsync("insertSeat", new object[] {
                    arg0}, this.insertSeatOperationCompleted, userState);
    }
    
    private void OninsertSeatOperationCompleted(object arg) {
        if ((this.insertSeatCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.insertSeatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public seat[] findPlazasAceptadasUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
        object[] results = this.Invoke("findPlazasAceptadasUser", new object[] {
                    arg0,
                    arg0Specified});
        return ((seat[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginfindPlazasAceptadasUser(long arg0, bool arg0Specified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("findPlazasAceptadasUser", new object[] {
                    arg0,
                    arg0Specified}, callback, asyncState);
    }
    
    /// <remarks/>
    public seat[] EndfindPlazasAceptadasUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((seat[])(results[0]));
    }
    
    /// <remarks/>
    public void findPlazasAceptadasUserAsync(long arg0, bool arg0Specified) {
        this.findPlazasAceptadasUserAsync(arg0, arg0Specified, null);
    }
    
    /// <remarks/>
    public void findPlazasAceptadasUserAsync(long arg0, bool arg0Specified, object userState) {
        if ((this.findPlazasAceptadasUserOperationCompleted == null)) {
            this.findPlazasAceptadasUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPlazasAceptadasUserOperationCompleted);
        }
        this.InvokeAsync("findPlazasAceptadasUser", new object[] {
                    arg0,
                    arg0Specified}, this.findPlazasAceptadasUserOperationCompleted, userState);
    }
    
    private void OnfindPlazasAceptadasUserOperationCompleted(object arg) {
        if ((this.findPlazasAceptadasUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.findPlazasAceptadasUserCompleted(this, new findPlazasAceptadasUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void insert([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified) {
        this.Invoke("insert", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified});
    }
    
    /// <remarks/>
    public System.IAsyncResult Begininsert(long arg0, bool arg0Specified, long arg1, bool arg1Specified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("insert", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void Endinsert(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void insertAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified) {
        this.insertAsync(arg0, arg0Specified, arg1, arg1Specified, null);
    }
    
    /// <remarks/>
    public void insertAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified, object userState) {
        if ((this.insertOperationCompleted == null)) {
            this.insertOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertOperationCompleted);
        }
        this.InvokeAsync("insert", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, this.insertOperationCompleted, userState);
    }
    
    private void OninsertOperationCompleted(object arg) {
        if ((this.insertCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.insertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public seat[] findByTrip([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
        object[] results = this.Invoke("findByTrip", new object[] {
                    arg0,
                    arg0Specified});
        return ((seat[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginfindByTrip(long arg0, bool arg0Specified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("findByTrip", new object[] {
                    arg0,
                    arg0Specified}, callback, asyncState);
    }
    
    /// <remarks/>
    public seat[] EndfindByTrip(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((seat[])(results[0]));
    }
    
    /// <remarks/>
    public void findByTripAsync(long arg0, bool arg0Specified) {
        this.findByTripAsync(arg0, arg0Specified, null);
    }
    
    /// <remarks/>
    public void findByTripAsync(long arg0, bool arg0Specified, object userState) {
        if ((this.findByTripOperationCompleted == null)) {
            this.findByTripOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindByTripOperationCompleted);
        }
        this.InvokeAsync("findByTrip", new object[] {
                    arg0,
                    arg0Specified}, this.findByTripOperationCompleted, userState);
    }
    
    private void OnfindByTripOperationCompleted(object arg) {
        if ((this.findByTripCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.findByTripCompleted(this, new findByTripCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void excluirUsuario([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
        this.Invoke("excluirUsuario", new object[] {
                    arg0});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginexcluirUsuario(string arg0, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("excluirUsuario", new object[] {
                    arg0}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndexcluirUsuario(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void excluirUsuarioAsync(string arg0) {
        this.excluirUsuarioAsync(arg0, null);
    }
    
    /// <remarks/>
    public void excluirUsuarioAsync(string arg0, object userState) {
        if ((this.excluirUsuarioOperationCompleted == null)) {
            this.excluirUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexcluirUsuarioOperationCompleted);
        }
        this.InvokeAsync("excluirUsuario", new object[] {
                    arg0}, this.excluirUsuarioOperationCompleted, userState);
    }
    
    private void OnexcluirUsuarioOperationCompleted(object arg) {
        if ((this.excluirUsuarioCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.excluirUsuarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void delete([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified) {
        this.Invoke("delete", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified});
    }
    
    /// <remarks/>
    public System.IAsyncResult Begindelete(long arg0, bool arg0Specified, long arg1, bool arg1Specified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("delete", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void Enddelete(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void deleteAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified) {
        this.deleteAsync(arg0, arg0Specified, arg1, arg1Specified, null);
    }
    
    /// <remarks/>
    public void deleteAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified, object userState) {
        if ((this.deleteOperationCompleted == null)) {
            this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
        }
        this.InvokeAsync("delete", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, this.deleteOperationCompleted, userState);
    }
    
    private void OndeleteOperationCompleted(object arg) {
        if ((this.deleteCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void actualizarExcluido([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified) {
        this.Invoke("actualizarExcluido", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginactualizarExcluido(long arg0, bool arg0Specified, long arg1, bool arg1Specified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("actualizarExcluido", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndactualizarExcluido(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void actualizarExcluidoAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified) {
        this.actualizarExcluidoAsync(arg0, arg0Specified, arg1, arg1Specified, null);
    }
    
    /// <remarks/>
    public void actualizarExcluidoAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified, object userState) {
        if ((this.actualizarExcluidoOperationCompleted == null)) {
            this.actualizarExcluidoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarExcluidoOperationCompleted);
        }
        this.InvokeAsync("actualizarExcluido", new object[] {
                    arg0,
                    arg0Specified,
                    arg1,
                    arg1Specified}, this.actualizarExcluidoOperationCompleted, userState);
    }
    
    private void OnactualizarExcluidoOperationCompleted(object arg) {
        if ((this.actualizarExcluidoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.actualizarExcluidoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://seat.impl.business.sdi.com/", ResponseNamespace="http://seat.impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public seat[] findByUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
        object[] results = this.Invoke("findByUser", new object[] {
                    arg0,
                    arg0Specified});
        return ((seat[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginfindByUser(long arg0, bool arg0Specified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("findByUser", new object[] {
                    arg0,
                    arg0Specified}, callback, asyncState);
    }
    
    /// <remarks/>
    public seat[] EndfindByUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((seat[])(results[0]));
    }
    
    /// <remarks/>
    public void findByUserAsync(long arg0, bool arg0Specified) {
        this.findByUserAsync(arg0, arg0Specified, null);
    }
    
    /// <remarks/>
    public void findByUserAsync(long arg0, bool arg0Specified, object userState) {
        if ((this.findByUserOperationCompleted == null)) {
            this.findByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindByUserOperationCompleted);
        }
        this.InvokeAsync("findByUser", new object[] {
                    arg0,
                    arg0Specified}, this.findByUserOperationCompleted, userState);
    }
    
    private void OnfindByUserOperationCompleted(object arg) {
        if ((this.findByUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.findByUserCompleted(this, new findByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <comentarios/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://seat.impl.business.sdi.com/")]
public partial class seat {
    
    private string commentField;
    
    private seatStatus statusField;
    
    private bool statusFieldSpecified;
    
    private long tripIdField;
    
    private bool tripIdFieldSpecified;
    
    private long userIdField;
    
    private bool userIdFieldSpecified;
    
    /// <comentarios/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string comment {
        get {
            return this.commentField;
        }
        set {
            this.commentField = value;
        }
    }
    
    /// <comentarios/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public seatStatus status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <comentarios/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool statusSpecified {
        get {
            return this.statusFieldSpecified;
        }
        set {
            this.statusFieldSpecified = value;
        }
    }
    
    /// <comentarios/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public long tripId {
        get {
            return this.tripIdField;
        }
        set {
            this.tripIdField = value;
        }
    }
    
    /// <comentarios/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool tripIdSpecified {
        get {
            return this.tripIdFieldSpecified;
        }
        set {
            this.tripIdFieldSpecified = value;
        }
    }
    
    /// <comentarios/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public long userId {
        get {
            return this.userIdField;
        }
        set {
            this.userIdField = value;
        }
    }
    
    /// <comentarios/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool userIdSpecified {
        get {
            return this.userIdFieldSpecified;
        }
        set {
            this.userIdFieldSpecified = value;
        }
    }
}

/// <comentarios/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://seat.impl.business.sdi.com/")]
public enum seatStatus {
    
    /// <comentarios/>
    ACCEPTED,
    
    /// <comentarios/>
    EXCLUDED,
    
    /// <comentarios/>
    SIN_PLAZA,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void insertExcluidoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void insertSinPlazasCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void findPlazasAceptadasCompletedEventHandler(object sender, findPlazasAceptadasCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class findPlazasAceptadasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal findPlazasAceptadasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public seat[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((seat[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void insertSeatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void findPlazasAceptadasUserCompletedEventHandler(object sender, findPlazasAceptadasUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class findPlazasAceptadasUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal findPlazasAceptadasUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public seat[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((seat[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void insertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void findByTripCompletedEventHandler(object sender, findByTripCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class findByTripCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal findByTripCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public seat[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((seat[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void excluirUsuarioCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void actualizarExcluidoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void findByUserCompletedEventHandler(object sender, findByUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class findByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal findByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public seat[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((seat[])(this.results[0]));
        }
    }
}
